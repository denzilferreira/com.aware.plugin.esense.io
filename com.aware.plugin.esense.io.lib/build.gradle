apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion compile_sdk
    buildToolsVersion build_tools

    defaultConfig {
        minSdkVersion minimum_sdk
        targetSdkVersion target_sdk
        versionCode version_code
        versionName version_readable
    }

    signingConfigs {
        release
    }
    
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            java.srcDirs += '../com.aware.plugin.esense.io/src/main/java'
            res.srcDirs += '../com.aware.plugin.esense.io/src/main/res'
            manifest.srcFile '../com.aware.plugin.esense.io/src/main/AndroidManifest.xml'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api project(':aware-core')
}
